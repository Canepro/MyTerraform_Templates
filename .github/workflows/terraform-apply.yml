name: Terraform Apply

on:
  push:
    branches:
      - main
    paths:
      - 'stacks/**'
  workflow_dispatch:
    inputs:
      stack_path:
        description: 'Stack path to apply (e.g., stacks/azure/sandbox)'
        required: true
        type: string
      auto_approve:
        description: 'Auto-approve apply (skip manual approval)'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  detect-stacks:
    name: Detect Stacks to Apply
    runs-on: ubuntu-latest
    outputs:
      stacks: ${{ steps.detect.outputs.stacks }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed stacks
        id: detect
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # Manual trigger with specific stack
            STACKS='["${{ inputs.stack_path }}"]'
          else
            # Auto-detect from push
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }}...${{ github.event.after }})
            STACKS=$(echo "$CHANGED_FILES" | grep -E '^stacks/' | cut -d'/' -f1-4 | sort -u | jq -R -s -c 'split("\n")[:-1]')
          fi
          
          echo "stacks=$STACKS" >> $GITHUB_OUTPUT
          echo "Stacks to apply: $STACKS"

  terraform-apply:
    name: Apply Terraform
    runs-on: ubuntu-latest
    needs: detect-stacks
    if: needs.detect-stacks.outputs.stacks != '[]'
    strategy:
      matrix:
        stack: ${{ fromJson(needs.detect-stacks.outputs.stacks) }}
      max-parallel: 1  # Apply stacks one at a time

    environment:
      name: ${{ matrix.stack }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.5

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        id: init
        working-directory: ${{ matrix.stack }}
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Plan
        id: plan
        working-directory: ${{ matrix.stack }}
        run: |
          terraform plan -out=tfplan -no-color
          terraform show -no-color tfplan > tfplan.txt
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.stack }}
          path: ${{ matrix.stack }}/tfplan.txt

      - name: Manual Approval Check
        if: github.event_name != 'workflow_dispatch' || !inputs.auto_approve
        run: |
          echo "⚠️ Manual approval required for applying changes"
          echo "Please review the plan and approve this deployment"
          echo "This job will wait for environment approval in GitHub Actions"

      - name: Terraform Apply
        id: apply
        working-directory: ${{ matrix.stack }}
        run: terraform apply -auto-approve tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Output
        id: output
        working-directory: ${{ matrix.stack }}
        run: terraform output -json > outputs.json

      - name: Upload Outputs
        uses: actions/upload-artifact@v4
        with:
          name: outputs-${{ matrix.stack }}
          path: ${{ matrix.stack }}/outputs.json

      - name: Comment on Commit
        uses: actions/github-script@v7
        if: github.event_name == 'push'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### ✅ Terraform Apply Successful
            
            **Stack**: \`${{ matrix.stack }}\`
            **Commit**: ${{ github.sha }}
            
            Applied changes to Azure infrastructure.
            
            View the plan artifact for details.`;
            
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: output
            })

